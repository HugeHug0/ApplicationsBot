import phonenumbers
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InputMediaPhoto, InputMediaVideo

from core.keyboards.reply_keyboards import confirm_application_keyboard


async def final_application_answer(message: Message, state: FSMContext):
    data = await state.get_data()

    name = data.get('name').replace('\n', ' ')
    service = data.get('service')
    details = data.get('details')
    files = data.get('files')
    contact = data.get('phone_number') or f'@{data.get("username")}'


    final_answer = f"""‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ ‚úÖ

üë§ –ò–º—è: {name if name else '‚Äî'}
üìÇ –£—Å–ª—É–≥–∞: {service if service else '‚Äî'}
üìÑ –î–µ—Ç–∞–ª–∏: {details if details else '‚Äî'}
üìé –§–∞–π–ª—ã: {'–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã' if files else '‚Äî'}
üìû –°–ø–æ—Å–æ–± —Å–≤—è–∑–∏: {contact if contact else '‚Äî'}

üîî –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è! (–í –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è)
"""

    if not files:
        files = {}

    if files.get('photos_id'):
        media = [InputMediaPhoto(media=file_id) for file_id in files['photos_id'][:10]]
        await message.answer_media_group(media)
    if files.get('videos_id'):
        media_videos = [InputMediaVideo(media=file_id) for file_id in files['videos_id'][:5]]
        await message.answer_media_group(media=media_videos)

    await message.answer(final_answer, reply_markup=confirm_application_keyboard())

    if files.get('documents_id'):
        for document_id in files['documents_id']:
            await message.answer_document(document_id)


async def update_files_id(message: Message, state: FSMContext):
    data = await state.get_data()
    files = data.get('files', {'documents_id': [], 'photos_id': [], 'videos_id': []})

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–ø–∏—Å–∫–∏
    if message.document:
        files['documents_id'].append(message.document.file_id)
    elif message.photo:
        files['photos_id'].append(message.photo[-1].file_id)  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    else:
        files['videos_id'].append(message.video.file_id)

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(files=files)


def is_phone_number(text: str) -> bool:
    try:
        number = phonenumbers.parse(text, None)  # None ‚Äî –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω—É
        return phonenumbers.is_possible_number(number) and phonenumbers.is_valid_number(number)
    except phonenumbers.NumberParseException:
        return False
